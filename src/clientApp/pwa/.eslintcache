[{"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\index.js":"1","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reportWebVitals.js":"2","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\App.js":"4","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\store.js":"5","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\OtpKycPage.js":"6","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\WalletPage.js":"7","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\HomePage.js":"8","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\KycPage.js":"9","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\ContractPage.js":"10","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\NationalCodePage.js":"11","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\ActivePage.js":"12","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\PrivateRoute.js":"13","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\rootReducer.js":"14","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\device.js":"15","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\TransactionsLink.js":"16","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\user.action.js":"17","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\MofidCard.js":"18","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\card.action.js":"19","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\UnRegister.js":"20","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\client.action.js":"21","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\nationalCode.action.js":"22","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\States.js":"23","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Kyc\\OtpForm.js":"24","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\InActiveCard.js":"25","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\Tbs.js":"26","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\config.js":"27","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\client.constants.js":"28","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Kyc\\Form.js":"29","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\auth.reducer.js":"30","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\tbs.reducer.js":"31","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\card.reducer.js":"32","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\nationalCode.reducer.js":"33","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\client.reducer.js":"34","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\card.constants.js":"35","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\user.constants.js":"36","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\card.service.js":"37","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\nationalCode.constants.js":"38","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\nationalCode.service.js":"39","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\client.service.js":"40","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\user.service.js":"41","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\tbs.action.js":"42","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\tbs.constants.js":"43","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\authHeader.js":"44","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\tbs.service.js":"45","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\VerifyActivePage.js":"46"},{"size":662,"mtime":1611123858871,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":5064,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":1867,"mtime":1613458744177,"results":"51","hashOfConfig":"48"},{"size":379,"mtime":1610454626696,"results":"52","hashOfConfig":"48"},{"size":1717,"mtime":1613392141497,"results":"53","hashOfConfig":"48"},{"size":2074,"mtime":1611122479255,"results":"54","hashOfConfig":"48"},{"size":1175,"mtime":1611034688068,"results":"55","hashOfConfig":"48"},{"size":1970,"mtime":1611049309326,"results":"56","hashOfConfig":"48"},{"size":13489,"mtime":1612858858039,"results":"57","hashOfConfig":"48"},{"size":3410,"mtime":1611044923360,"results":"58","hashOfConfig":"48"},{"size":2981,"mtime":1613457713321,"results":"59","hashOfConfig":"48"},{"size":505,"mtime":1611034778312,"results":"60","hashOfConfig":"48"},{"size":458,"mtime":1611055445499,"results":"61","hashOfConfig":"48"},{"size":269,"mtime":1611056216141,"results":"62","hashOfConfig":"48"},{"size":229,"mtime":1611036168669,"results":"63","hashOfConfig":"48"},{"size":1016,"mtime":1610977163456,"results":"64","hashOfConfig":"48"},{"size":679,"mtime":1611039064506,"results":"65","hashOfConfig":"48"},{"size":1152,"mtime":1613456097242,"results":"66","hashOfConfig":"48"},{"size":265,"mtime":1611040284393,"results":"67","hashOfConfig":"48"},{"size":2951,"mtime":1611123573906,"results":"68","hashOfConfig":"48"},{"size":1159,"mtime":1613398668124,"results":"69","hashOfConfig":"48"},{"size":1357,"mtime":1611122253422,"results":"70","hashOfConfig":"48"},{"size":1961,"mtime":1613392226556,"results":"71","hashOfConfig":"48"},{"size":308,"mtime":1611123663957,"results":"72","hashOfConfig":"48"},{"size":1538,"mtime":1611045697880,"results":"73","hashOfConfig":"48"},{"size":188,"mtime":1613809425603,"results":"74","hashOfConfig":"48"},{"size":883,"mtime":1611054316546,"results":"75","hashOfConfig":"48"},{"size":4474,"mtime":1612854152776,"results":"76","hashOfConfig":"48"},{"size":1129,"mtime":1610454626830,"results":"77","hashOfConfig":"48"},{"size":645,"mtime":1610979588706,"results":"78","hashOfConfig":"48"},{"size":1669,"mtime":1613456258284,"results":"79","hashOfConfig":"48"},{"size":853,"mtime":1613398706279,"results":"80","hashOfConfig":"48"},{"size":3374,"mtime":1611058963318,"results":"81","hashOfConfig":"48"},{"size":536,"mtime":1613456023674,"results":"82","hashOfConfig":"48"},{"size":229,"mtime":1610454626568,"results":"83","hashOfConfig":"48"},{"size":1682,"mtime":1613456434285,"results":"84","hashOfConfig":"48"},{"size":193,"mtime":1610975393700,"results":"85","hashOfConfig":"48"},{"size":1089,"mtime":1611048192153,"results":"86","hashOfConfig":"48"},{"size":2956,"mtime":1611056523646,"results":"87","hashOfConfig":"48"},{"size":1654,"mtime":1610973130186,"results":"88","hashOfConfig":"48"},{"size":663,"mtime":1610980228378,"results":"89","hashOfConfig":"48"},{"size":177,"mtime":1610979442961,"results":"90","hashOfConfig":"48"},{"size":206,"mtime":1610545075104,"results":"91","hashOfConfig":"48"},{"size":1245,"mtime":1611048206500,"results":"92","hashOfConfig":"48"},{"size":3067,"mtime":1613458864315,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"uztj3k",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"97"},"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\index.js",["203"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './helpers/store';\nimport { register , unregister } from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nregister();\n\nreportWebVitals();\n",["204","205"],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reportWebVitals.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\App.js",["206","207","208","209","210","211"],"import logo from './logo.svg';\nimport './App.css';\nimport HomePage from \"./pages/HomePage\";\nimport NationalCodePage from \"./pages/NationalCodePage\";\nimport WalletPage from \"./pages/WalletPage\";\nimport VerifyActivePage from \"./pages/VerifyActivePage\";\n\nimport KycPage from \"./pages/KycPage\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport {  BrowserRouter as Router, Route , Switch } from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport { useHistory } from 'react-router-dom'\nimport {useEffect} from \"react\";\nimport ContractPage from \"./pages/ContractPage\";\nimport OtpKycPage from \"./pages/OtpKycPage\";\nimport ActivePage from \"./pages/ActivePage\";\nimport usePWA from 'react-pwa-install-prompt'\nfunction App() {\n    const  history = useHistory();\n    const { isStandalone, isInstallPromptSupported, promptInstall } = usePWA()\n    const user = useSelector(state => state.authentication.user);\n\n    const onClickInstall = async () => {\n        const didInstall = await promptInstall()\n        if (didInstall) {\n            // User accepted PWA install\n        }\n    }\n\n\n\n\n  return (\n      <div className=\"App\">\n        <Router history={history}>\n          <Switch>\n              <PrivateRoute  path=\"/nationalcode/:afterLogin?\" component={NationalCodePage} />\n              <PrivateRoute  path=\"/preview\" component={WalletPage} />\n              <PrivateRoute  path=\"/contract\" component={ContractPage} />\n              <PrivateRoute  path=\"/kyc\" component={KycPage} />\n              <PrivateRoute  path=\"/kycOtp\" component={OtpKycPage} />\n              <PrivateRoute  path=\"/active\" component={ActivePage} />\n              <PrivateRoute  path=\"/verifyactive\" component={VerifyActivePage} />\n              <Route exact path='/' component={HomePage} />\n          </Switch>\n        </Router>\n      </div>\n  );\n}\n\n\n\n\nexport default App;\n","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\store.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\OtpKycPage.js",["212","213"],"import OtpForm from \"../components/Kyc/OtpForm\";\r\nimport {clientActions} from \"../actions/client.action\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deviceId} from \"../helpers/device\";\r\nimport {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst OtpKycPage = () => {\r\n    const dispatch = useDispatch();\r\n    const {phoneNumber, nationalCode} = useSelector(state => state.client.data)\r\n    const loading = useSelector(state => state.client.isVerifyLoading)\r\n    const verifyResult = useSelector(state => state.client.verifyResult)\r\n    const physicalResult = useSelector(state => state.client.physicalResult)\r\n    const {result, isLoading, error} = useSelector(state => state.card)\r\n\r\n\r\n    const errors = useSelector(state => state.client.error)\r\n    const submitHandler = (data) => {\r\n        dispatch(clientActions.verify({\r\n            ...data,\r\n            deviceId: deviceId(),\r\n            phoneNumber: phoneNumber,\r\n            nationalCode: nationalCode\r\n        }));\r\n    }\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        if (verifyResult && result && physicalResult) {\r\n            history.push(\"/preview\")\r\n        }\r\n    }, [verifyResult, result, physicalResult]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!phoneNumber) {\r\n            history.push(\"/kyc\")\r\n        }\r\n    }, [phoneNumber])\r\n\r\n    return (\r\n        <>\r\n            <div className={\"container d-flex justify-content-center align-items-center\"} >\r\n\r\n\r\n                <OtpForm submitHandler={submitHandler} isLoading={(loading || isLoading)} error={error} errorClient={errors}/>\r\n            </div>\r\n            <br />\r\n\r\n        </>\r\n    );\r\n}\r\nexport default OtpKycPage;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\WalletPage.js",["214"],"import \"../content/css/Wallet.css\"\r\nimport Tbs from '../components/Wallet/Tbs'\r\nimport MofidCard from '../components/Wallet/MofidCard'\r\nimport UnRegister from '../components/Wallet/UnRegister'\r\n\r\nimport { useEffect } from 'react'\r\n\r\nimport TransactionsLink from \"../components/Wallet/TransactionsLink\";\r\nimport {useSelector ,  useDispatch} from \"react-redux\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {clientActions} from \"../actions/client.action\";\r\nimport InActiveCard from \"../components/Wallet/InActiveCard\";\r\nimport States from \"../components/Wallet/States\";\r\nconst WalletPage = () => {\r\n    const dispatch = useDispatch();\r\n    const userstates = useSelector(state => state.client?.states);\r\n    const { nationalCode } = useSelector(state => state.userLegal.data);\r\n    const isLoading = useSelector(state => state.client?.isLoading);\r\n\r\n    useEffect(() => {\r\n        if(nationalCode)\r\n            dispatch(clientActions.getStates(nationalCode));\r\n    } , [nationalCode]);\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <br/>\r\n            <br/>\r\n            <div className=\"row tbs-container\"  style={{paddingBottom:20}}>\r\n                <Tbs />\r\n                <br />\r\n            </div>\r\n\r\n            {isLoading &&  <ClipLoader color={\"#000\"} loading={true} size={50}/>}\r\n            {!isLoading && userstates && userstates.indexOf(\"CardIssued\") > -1 && userstates.indexOf(\"CardActivated\") <= -1 && <>\r\n\r\n                <div>\r\n                    <States />\r\n                    <br />\r\n                    <InActiveCard />\r\n                </div>\r\n\r\n            </> }\r\n            {!isLoading &&  userstates && userstates.indexOf(\"CardActivated\") > -1 && <>\r\n                <MofidCard />\r\n                <br />\r\n                <br />\r\n                <TransactionsLink />\r\n            </> }\r\n\r\n            {!isLoading &&  userstates.indexOf(\"CardIssued\") <= -1 && <>\r\n                <br />\r\n                <br />\r\n                <UnRegister />\r\n            </> }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default  WalletPage;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\HomePage.js",["215","216","217"],"import ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userActions} from \"../actions/user.action\";\r\nimport {userAuth} from \"../services/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport logo from '../logo.png'\r\n\r\nconst HomePage = () => {\r\n    const history = useHistory();\r\n    let [color, setColor] = useState(\"#000\");\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.authentication.user);\r\n    useEffect(() => {\r\n        console.log(user);\r\n        dispatch(userActions.login(userAuth.username, userAuth.password));\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n           history.push(\"/nationalcode\")\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <div className=\"conatiner\" style={{\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n\r\n\r\n            <img src={logo} width={100} />\r\n            <ClipLoader color={color} loading={true} size={50}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\KycPage.js",["218","219","220","221"],"\r\nimport {clientActions} from \"../actions/client.action\";\r\nimport {clientConstants} from \"../constants/client.constants\";\r\nimport  { useSelector  , useDispatch } from \"react-redux\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from 'react'\r\nimport {deviceId} from \"../helpers/device\";\r\nimport Form from \"../components/Kyc/Form\";\r\n\r\n\r\nconst KycPage = () => {\r\n    const history = useHistory();\r\n\r\n    const { nationalCode , phoneNumber } = useSelector(state => state.userLegal.data);\r\n    const isLoading = useSelector(state => state.client.isLoading);\r\n    const info = useSelector(state => state.client.info) ?? {};\r\n    const otp = useSelector(state => state.client.result) ?? false;\r\n    const isKycLoading = useSelector(state => state.client.isKycLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (data)  => {\r\n        dispatch({ type:clientConstants.SET_KYC_DATA , data :data   })\r\n        dispatch(clientActions.kyc({...data , deviceId: deviceId() }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(otp == true){\r\n            history.push(\"/kycOtp\");\r\n        }\r\n    } , [otp])\r\n\r\n\r\n    useEffect(() => {\r\n        if(nationalCode)\r\n            dispatch(clientActions.getAddress(nationalCode));\r\n    } , []);\r\n\r\n    useEffect(() => {\r\n        if(!nationalCode){\r\n            history.push(`/nationalCode?afterLogin=/kyc`)\r\n        }\r\n    }, [nationalCode]);\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {isLoading && <div className={\"container center-center\"}>\r\n\r\n                <ClipLoader color={\"#000\"} loading={true} size={20}/>\r\n\r\n            </div>}\r\n\r\n            {!isLoading && <div className={\"container center-center\"}>\r\n                <Form info={{ phoneNumber: phoneNumber , nationalCode: nationalCode , ...info }} submitHandler={submitHandler} isLoading={isKycLoading} />\r\n            </div>}\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default  KycPage;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\ContractPage.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\NationalCodePage.js",["222","223","224"],"import \"../content/css/NationalCode.css\"\r\nimport { useForm  } from 'react-hook-form';\r\nimport {nationalCodeActions} from \"../actions/nationalCode.action\";\r\nimport  { useSelector  , useDispatch } from \"react-redux\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useHistory , useParams , useLocation } from \"react-router-dom\";\r\nimport { useEffect } from 'react'\r\nimport logo from '../logo.png'\r\nconst NationalCodePage = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { register, handleSubmit , errors } = useForm({\r\n        // resolver: yupResolver(schema),\r\n        resolver: undefined,\r\n        context: undefined,\r\n        reValidateMode: 'onChange',\r\n        shouldFocusError: true,\r\n        shouldUnregister: true,\r\n        mode: 'onSubmit',\r\n    });\r\n\r\n    const location = useLocation();\r\n    const afterLogin = new URLSearchParams(location.search).get(\"afterLogin\")\r\n\r\n\r\n    const submitLogin = (data) => {\r\n        dispatch(nationalCodeActions.set(data));\r\n    }\r\n\r\n    const _data = useSelector(state => state.userLegal?.data);\r\n    const loading = useSelector(state => state.userLegal?.isLoading);\r\n    const error = useSelector(state => state.userLegal?.error);\r\n\r\n    useEffect(() => {\r\n        if(_data?.nationalCode) {\r\n\r\n            if(afterLogin){\r\n                history.push(afterLogin);\r\n            }else {\r\n                history.push(\"/preview\");\r\n            }\r\n        }\r\n    }, [_data])\r\n\r\n    return (\r\n        <div className=\"container center-center\" style={{direction: \"rtl\", textAlign: 'right'}}>\r\n            <div className=\"card\" style={{width:\"100%\"}}>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={handleSubmit(d =>  submitLogin(d) )}>\r\n\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <img src={logo} width={100} />\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"form-group\">\r\n                            <label> کد ملی </label>\r\n                            <input type=\"text\"  ref={register({ required: true})}  className=\"form-control\" name=\"nationalCode\"/>\r\n                            {errors.nationalCode && <small style={{color:\"red\"}}> کد ملی را وارد کنید </small>  }\r\n                        </div>\r\n\r\n                        <br/>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label> شماره تلفن </label>\r\n                            <input type=\"text\"  ref={register({ required: true})}  className=\"form-control\" name=\"phoneNumber\"/>\r\n                            {errors.phoneNumber && <small style={{color:\"red\"}}> شماره را وارد کنید </small>  }\r\n                        </div>\r\n                        <br />\r\n\r\n                        { loading && <button className=\"btn btn-block btn-primary w-100\" disabled={true}>   <ClipLoader color={\"#fff\"} loading={true} size={20}/> </button> }\r\n\r\n                        { !loading && <button className=\"btn btn-block btn-primary w-100\"> ذخیره</button> }\r\n                        <br />\r\n                        { error &&  <p style={{marginTop:7}} className=\"alert alert-danger\"> {error} </p> }\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NationalCodePage;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\ActivePage.js",["225","226","227","228","229","230"],"\r\nimport {cardActions} from \"../actions/card.action\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deviceId} from \"../helpers/device\";\r\nimport {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst ActivePage = () => {\r\n    const dispatch = useDispatch();\r\n    const {phoneNumber, nationalCode} = useSelector(state => state.userLegal.data)\r\n    const loading = useSelector(state => state.client.isVerifyLoading)\r\n    const verifyResult = useSelector(state => state.client.verifyResult)\r\n    const physicalResult = useSelector(state => state.client.physicalResult)\r\n    const {resultActive, isLoadingActivate, errorActivate} = useSelector(state => state.card)\r\n    const submitHandler = (data) => {\r\n        \r\n       \r\n        dispatch(cardActions.activate({...data , phoneNumber ,nationalCode }));\r\n    }   \r\n\r\n    const { register, handleSubmit , errors } = useForm({\r\n        // resolver: yupResolver(schema),\r\n        resolver: undefined,\r\n        defaultValues: {\r\n\r\n        },\r\n        context: undefined,\r\n        reValidateMode: 'onChange',\r\n        shouldFocusError: true,\r\n        shouldUnregister: true,\r\n        mode: 'onSubmit',\r\n    });\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n\r\n    },);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={\"container d-flex justify-content-center align-items-center\"} >\r\n                <div className={\"\"} style={{direction:\"rtl\" , textAlign:\"right\" , fontSize: 15 , background: \"#014f86\",color: \"white\",padding: 28 }}>\r\n\r\n                    <br />\r\n                    <p style={{textAlign:\"center\"}}> فعالسازی مفید کارت </p>\r\n                    <br/>\r\n                    <p className={\"mofid-color\"}> شماره کارت </p>\r\n                    <form onSubmit={handleSubmit(d => submitHandler(d) )} >\r\n                        <div className=\"form-group\">\r\n\r\n                            <input type=\"text\"  ref={register({ required: true})}  className=\"form-control mofid-input\" name=\"pan\" />\r\n                            {errors.otp && <small style={{color:\"red\"}}> شماره کارت را وارد کنید </small>  }\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        { !isLoadingActivate && <button className={\"btn btn-primary w-100\"}> فعالسازی </button> }\r\n                        { isLoadingActivate && <button type={\"button\"} className={\"btn btn-primary w-100\"}>  <ClipLoader color={\"#fff\"} loading={true} size={20}/>  </button> }\r\n                    </form>\r\n\r\n                    {errorActivate && renderError(errorActivate)}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderError = (error) => {\r\n    return (<small style={{color:\"red\"}}>{error}</small>);\r\n}\r\n\r\nexport default ActivePage;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\PrivateRoute.js",["231"],"import { Route, Redirect } from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) =>  {\r\n    \r\n    const user = useSelector(state => state.authentication.user)\r\n\r\n    return(\r\n        \r\n    <Route {...rest} render={props => (\r\n        user\r\n            ? <Component {...props} />\r\n            : <Component {...props} />\r\n        // <Redirect to={{pathname: '/token-refresh', state: {from: props.location}}} />\r\n    )} />\r\n)\r\n}","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\rootReducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\device.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\TransactionsLink.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\user.action.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\MofidCard.js",["232"],"import card from '../../content/image/card.png'\r\nconst MofidCard = () => {\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <img src={card}  />\r\n\r\n            <br />\r\n\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-6\">\r\n                    <button className=\"btn btn-primary\" style={{fontSize:10}}> افزایش موجودی کارت </button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <button className=\"btn btn-primary\" style={{fontSize:10}}> برداشت موجودی کارت </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default  MofidCard;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\card.action.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\UnRegister.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\client.action.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\nationalCode.action.js",["233"],"import { nationalCodeConstants } from '../constants/nationalCode.constants';\r\nimport {nationalCodeService} from \"../services/nationalCode.service\";\r\n\r\n\r\n\r\n\r\nexport const nationalCodeActions = {\r\n    set,\r\n};\r\n\r\nfunction set(data) {\r\n    return dispatch => {\r\n        dispatch({ type: nationalCodeConstants.FETCHING_NATIONAL_CODE , isLoading: true });\r\n        nationalCodeService.checkNationalCodeInTemporary(data.nationalCode)\r\n            .then(\r\n                res => {\r\n\r\n                    if(res == true){\r\n                        dispatch({ type: nationalCodeConstants.SET_CURRENT_USER , data });\r\n\r\n                        sessionStorage.setItem(\"userDetails\" , JSON.stringify(data));\r\n                    }else{\r\n                        dispatch({ type: nationalCodeConstants.NATIONAL_CODE_ILLEGAL , error: \"کد ملی مجاز نیست\" });\r\n                    }\r\n\r\n                },\r\n                error => {\r\n\r\n                    try{ \r\n                    dispatch({ type: nationalCodeConstants.NATIONAL_CODE_ILLEGAL , error});\r\n                    }catch(e){\r\n\r\n                    }\r\n                }\r\n            );\r\n\r\n    };\r\n}\r\n\r\n\r\n","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\States.js",["234"],"\r\nconst States = (props) => {\r\n    const { states } = props;\r\n    return (\r\n        <div>\r\n\r\n            <div id=\"timeline-content\">\r\n                <ul className=\"timeline\">\r\n                    <li className=\"event\" data-date=\"65Million B.C.\">\r\n                        <strong>  ثبت نام </strong>\r\n                        <p> برای نهایی شدن ثبت نام باید کد و دریافت و ثبت کنید </p>\r\n                    </li>\r\n\r\n                    <li className=\"event\" data-date=\"65Million B.C.\">\r\n                        <strong>  نحوه ارسال </strong>\r\n                        <p> از طریق پاد ارسال میشود </p>\r\n                    </li>\r\n\r\n                    <li className=\"event\" data-date=\"65Million B.C.\">\r\n                        <strong>  تحویل به پست </strong>\r\n                        <p> کارت شما پس از ایجاد شدن به پست تحویل داده میشود </p>\r\n                    </li>\r\n\r\n\r\n                    <li className=\"event\" data-date=\"65Million B.C.\">\r\n                        <strong> فعال سازی </strong>\r\n                        <p> بعد از دریافت کارت حتما فعالسازی کنید </p>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default  States;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Kyc\\OtpForm.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\InActiveCard.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Wallet\\Tbs.js",["235","236"],"import { useEffect } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { tbsActions } from '../../actions/tbs.action';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useHistory} from 'react-router-dom';\r\nconst Tbs = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const  nationalCode  = useSelector(state => state.userLegal.data?.nationalCode);\r\n    const loading = useSelector(state => state.tbs.isLoading);\r\n    useEffect(()=> {\r\n        if(nationalCode)\r\n            dispatch(tbsActions.getRemain(nationalCode));\r\n    },[]);\r\n\r\n\r\n    useEffect(()=> {\r\n      if(!nationalCode){\r\n          history.push(\"/nationalcode\");\r\n      }\r\n    },[nationalCode]);\r\n\r\n\r\n\r\n    const amount = useSelector(state => state.tbs?.amount);\r\n    return (\r\n        <>\r\n            <div className=\"col-12\">\r\n                <p style={{textAlign:\"center\"}}>  نزد کارگزاری  </p>\r\n                <p style={{textAlign:\"center\"}}>  { loading &&  <ClipLoader color={\"#fff\"} loading={true} size={20}/> } { !loading && \" ریال \"  + amount?.toLocaleString()  }  </p>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <button className=\"btn btn-primary\"  style={{fontSize:10}}> افزایش موجودی  </button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <button className=\"btn btn-primary\"  style={{fontSize:10}}> برداشت موجودی  </button>\r\n            </div>\r\n\r\n\r\n        </>\r\n)\r\n}\r\nexport default Tbs;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\config.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\client.constants.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\components\\Kyc\\Form.js",["237","238","239","240","241"],"import { useForm  } from 'react-hook-form';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport DatePicker from 'react-datepicker2';\r\nimport moment from \"moment-jalaali\";\r\n import { useState } from 'react';\r\nconst Form = (props) => {\r\n\r\n    const { register, handleSubmit , errors } = useForm({\r\n        // resolver: yupResolver(schema),\r\n        resolver: undefined,\r\n        defaultValues: {\r\n            nationalCode:props.info.nationalCode,\r\n            phoneNumber:props.info.phoneNumber,\r\n            addressString:props.info?.addressCity + \" \" + props.info?.address,\r\n            postalCode: props.info?.postalCode,\r\n            birthDate: props.info?.birthDate\r\n        },\r\n        context: undefined,\r\n        reValidateMode: 'onChange',\r\n        shouldFocusError: true,\r\n        shouldUnregister: true,\r\n        mode: 'onSubmit',\r\n    });\r\n\r\n\r\n\r\n    const [birthDate , setBirthDate] = useState(props.info.birthDate ?? \"1399/01/01\");\r\n    \r\n   const submitDate = ({value}) => {\r\n        console.log(value);\r\n        setBirthDate(value)\r\n   }\r\n    return (\r\n        <div className={\"container\"} style={{direction:\"rtl\" , textAlign:\"right\" , fontSize: 17 }}>\r\n\r\n            <br />\r\n            <p style={{textAlign:\"center\"}}> درخواست مفید کارت </p>\r\n\r\n            <form onSubmit={handleSubmit(d =>  { if(birthDate == \"\" || birthDate == null) { return false; }  props.submitHandler({...d , NationalCardSerial: props.info.nationalCode , birthDate});  })}>\r\n                <div className=\"form-group\">\r\n                    <label className={\"mofid-color\"}> موبایل </label>\r\n                    <input type=\"text\"  ref={register({ required: true})}  className=\"form-control mofid-input\" name=\"phoneNumber\" />\r\n                    {errors.phoneNumber && <small style={{color:\"red\"}}> موبایل را وارد کنید </small>  }\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className={\"mofid-color\"}> کد ملی </label>\r\n                    <input type=\"text\"  ref={register({ required: true })}  className=\"form-control mofid-input\" name=\"nationalCode\"/>\r\n                    {errors.nationalCode && <small style={{color:\"red\"}}> کد ملی را وارد کنید </small>  }\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <label className={\"mofid-color\"}> تاریخ تولد </label>\r\n                    \r\n                                        {/* <input type=\"text\"  ref={register({ required: true })}  className=\"form-control mofid-input\" name=\"birthDate\"/> */}\r\n                    <DatePicker  \r\n                    isGregorian={false}\r\n                    timePicker={false}\r\n                    className={\"form-control mofid-input direction-rtl\"}\r\n\r\n                        value={moment(birthDate , 'jYYYY/jM/jD')}\r\n                        onChange={value => {setBirthDate(value.format('jYYYY/jM/jD'))}}\r\n                    />\r\n                    { birthDate == \"\" || birthDate == null && <small style={{color:\"red\"}}>  تاریخ تولد را وارد کنید </small>  }\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <label className={\"mofid-color\"}> آدرس پستی </label>\r\n                    <textarea type=\"text\"  ref={register({ required: true})}  className=\"form-control mofid-input\" name=\"addressString\">\r\n                    </textarea>\r\n                    {errors.addressString && <small style={{color:\"red\"}}> آدرس پستی را وارد کنید </small>  }\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <label className={\"mofid-color\"}> کد پستی </label>\r\n                    <input type=\"text\"  ref={register({ required: true})}  className=\"form-control mofid-input\" name=\"postalCode\"/>\r\n                    {errors.postalCode && <small style={{color:\"red\"}}>  کد پستی را وارد کنید </small>  }\r\n                </div>\r\n                <br />\r\n                { !props.isLoading && <button className={\"btn btn-primary w-100\"}> تایید </button> }\r\n                { props.isLoading &&<button type={\"button\"} className={\"btn btn-primary w-100\"}>  <ClipLoader color={\"#fff\"} loading={true} size={20}/>  </button> }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport  default Form;","C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\auth.reducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\tbs.reducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\card.reducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\nationalCode.reducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\reducers\\client.reducer.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\card.constants.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\user.constants.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\card.service.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\nationalCode.constants.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\nationalCode.service.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\client.service.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\user.service.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\actions\\tbs.action.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\constants\\tbs.constants.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\helpers\\authHeader.js",[],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\services\\tbs.service.js",[],["242","243"],"C:\\Users\\M.Esmaili\\source\\repos\\stable\\mofid-wallet\\src\\pages\\VerifyActivePage.js",["244","245","246","247","248","249"],"\r\nimport {cardActions} from \"../actions/card.action\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deviceId} from \"../helpers/device\";\r\nimport {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst VerifyActivePage = () => {\r\n    const dispatch = useDispatch();\r\n    const {phoneNumber, nationalCode} = useSelector(state => state.userLegal.data)\r\n    const loading = useSelector(state => state.client.isVerifyLoading)\r\n    const verifyResult = useSelector(state => state.client.verifyResult)\r\n    const physicalResult = useSelector(state => state.client.physicalResult)\r\n    const {resultVerify, isLoadingVerify, errorVerify} = useSelector(state => state.card)\r\n    const submitHandler = (data) => {\r\n        \r\n       \r\n        dispatch(cardActions.activate({...data , phoneNumber ,nationalCode }));\r\n    }   \r\n\r\n    const { register, handleSubmit , errors } = useForm({\r\n        // resolver: yupResolver(schema),\r\n        resolver: undefined,\r\n        defaultValues: {\r\n\r\n        },\r\n        context: undefined,\r\n        reValidateMode: 'onChange',\r\n        shouldFocusError: true,\r\n        shouldUnregister: true,\r\n        mode: 'onSubmit',\r\n    });\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(resultVerify) {\r\n            history.push(\"/preview\");\r\n        }\r\n    },resultVerify);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={\"container d-flex justify-content-center align-items-center\"} >\r\n                <div className={\"\"} style={{direction:\"rtl\" , textAlign:\"right\" , fontSize: 15 , background: \"#014f86\",color: \"white\",padding: 28 }}>\r\n\r\n                    <br />\r\n                    <p style={{textAlign:\"center\"}}> فعالسازی مفید کارت </p>\r\n                    <br/>\r\n                    <p className={\"mofid-color\"}> شماره کارت </p>\r\n                    <form onSubmit={handleSubmit(d => submitHandler(d) )} >\r\n                        <div className=\"form-group\">\r\n\r\n                            <input type=\"text\"  ref={register({ required: true})}  className=\"form-control mofid-input\" name=\"pan\" />\r\n                            {errors.otp && <small style={{color:\"red\"}}> شماره کارت را وارد کنید </small>  }\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        { !isLoadingVerify && <button className={\"btn btn-primary w-100\"}> فعالسازی </button> }\r\n                        { isLoadingVerify && <button type={\"button\"} className={\"btn btn-primary w-100\"}>  <ClipLoader color={\"#fff\"} loading={true} size={20}/>  </button> }\r\n                    </form>\r\n\r\n                    {errorVerify && renderError(errorVerify)}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderError = (error) => {\r\n    return (<small style={{color:\"red\"}}>{error}</small>);\r\n}\r\n\r\nexport default VerifyActivePage;",{"ruleId":"250","severity":1,"message":"251","line":8,"column":21,"nodeType":"252","messageId":"253","endLine":8,"endColumn":31},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"250","severity":1,"message":"258","line":1,"column":8,"nodeType":"252","messageId":"253","endLine":1,"endColumn":12},{"ruleId":"250","severity":1,"message":"259","line":13,"column":9,"nodeType":"252","messageId":"253","endLine":13,"endColumn":18},{"ruleId":"250","severity":1,"message":"260","line":20,"column":13,"nodeType":"252","messageId":"253","endLine":20,"endColumn":25},{"ruleId":"250","severity":1,"message":"261","line":20,"column":27,"nodeType":"252","messageId":"253","endLine":20,"endColumn":51},{"ruleId":"250","severity":1,"message":"262","line":21,"column":11,"nodeType":"252","messageId":"253","endLine":21,"endColumn":15},{"ruleId":"250","severity":1,"message":"263","line":23,"column":11,"nodeType":"252","messageId":"253","endLine":23,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":32,"column":8,"nodeType":"266","endLine":32,"endColumn":46,"suggestions":"267"},{"ruleId":"264","severity":1,"message":"265","line":39,"column":8,"nodeType":"266","endLine":39,"endColumn":21,"suggestions":"268"},{"ruleId":"264","severity":1,"message":"269","line":23,"column":9,"nodeType":"266","endLine":23,"endColumn":23,"suggestions":"270"},{"ruleId":"250","severity":1,"message":"271","line":12,"column":17,"nodeType":"252","messageId":"253","endLine":12,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":24,"column":8,"nodeType":"266","endLine":24,"endColumn":14,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":35,"column":13,"nodeType":"275","endLine":35,"endColumn":43},{"ruleId":"276","severity":1,"message":"277","line":28,"column":16,"nodeType":"278","messageId":"279","endLine":28,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":31,"column":9,"nodeType":"266","endLine":31,"endColumn":14,"suggestions":"280"},{"ruleId":"264","severity":1,"message":"281","line":37,"column":9,"nodeType":"266","endLine":37,"endColumn":11,"suggestions":"282"},{"ruleId":"264","severity":1,"message":"265","line":43,"column":8,"nodeType":"266","endLine":43,"endColumn":22,"suggestions":"283"},{"ruleId":"250","severity":1,"message":"284","line":6,"column":23,"nodeType":"252","messageId":"253","endLine":6,"endColumn":32},{"ruleId":"264","severity":1,"message":"285","line":43,"column":8,"nodeType":"266","endLine":43,"endColumn":15,"suggestions":"286"},{"ruleId":"273","severity":1,"message":"274","line":52,"column":25,"nodeType":"275","endLine":52,"endColumn":55},{"ruleId":"250","severity":1,"message":"287","line":4,"column":9,"nodeType":"252","messageId":"253","endLine":4,"endColumn":17},{"ruleId":"250","severity":1,"message":"288","line":13,"column":11,"nodeType":"252","messageId":"253","endLine":13,"endColumn":18},{"ruleId":"250","severity":1,"message":"289","line":14,"column":11,"nodeType":"252","messageId":"253","endLine":14,"endColumn":23},{"ruleId":"250","severity":1,"message":"290","line":15,"column":11,"nodeType":"252","messageId":"253","endLine":15,"endColumn":25},{"ruleId":"250","severity":1,"message":"291","line":16,"column":12,"nodeType":"252","messageId":"253","endLine":16,"endColumn":24},{"ruleId":"250","severity":1,"message":"292","line":36,"column":11,"nodeType":"252","messageId":"253","endLine":36,"endColumn":18},{"ruleId":"250","severity":1,"message":"293","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":7,"column":13,"nodeType":"275","endLine":7,"endColumn":32},{"ruleId":"276","severity":1,"message":"277","line":18,"column":28,"nodeType":"278","messageId":"279","endLine":18,"endColumn":30},{"ruleId":"250","severity":1,"message":"294","line":3,"column":13,"nodeType":"252","messageId":"253","endLine":3,"endColumn":19},{"ruleId":"264","severity":1,"message":"281","line":15,"column":7,"nodeType":"266","endLine":15,"endColumn":9,"suggestions":"295"},{"ruleId":"264","severity":1,"message":"265","line":22,"column":7,"nodeType":"266","endLine":22,"endColumn":21,"suggestions":"296"},{"ruleId":"250","severity":1,"message":"297","line":29,"column":10,"nodeType":"252","messageId":"253","endLine":29,"endColumn":20},{"ruleId":"276","severity":1,"message":"277","line":39,"column":63,"nodeType":"278","messageId":"279","endLine":39,"endColumn":65},{"ruleId":"276","severity":1,"message":"277","line":65,"column":33,"nodeType":"278","messageId":"279","endLine":65,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":65,"column":39,"nodeType":"300","messageId":"301","endLine":65,"endColumn":41},{"ruleId":"298","severity":1,"message":"299","line":65,"column":60,"nodeType":"300","messageId":"301","endLine":65,"endColumn":62},{"ruleId":"254","replacedBy":"302"},{"ruleId":"256","replacedBy":"303"},{"ruleId":"250","severity":1,"message":"287","line":4,"column":9,"nodeType":"252","messageId":"253","endLine":4,"endColumn":17},{"ruleId":"250","severity":1,"message":"288","line":13,"column":11,"nodeType":"252","messageId":"253","endLine":13,"endColumn":18},{"ruleId":"250","severity":1,"message":"289","line":14,"column":11,"nodeType":"252","messageId":"253","endLine":14,"endColumn":23},{"ruleId":"250","severity":1,"message":"290","line":15,"column":11,"nodeType":"252","messageId":"253","endLine":15,"endColumn":25},{"ruleId":"264","severity":1,"message":"304","line":41,"column":7,"nodeType":"252","endLine":41,"endColumn":19},{"ruleId":"264","severity":1,"message":"305","line":41,"column":7,"nodeType":"252","endLine":41,"endColumn":19,"suggestions":"306"},"no-unused-vars","'unregister' is defined but never used.","Identifier","unusedVar","no-native-reassign",["307"],"no-negated-in-lhs",["308"],"'logo' is defined but never used.","'useEffect' is defined but never used.","'isStandalone' is assigned a value but never used.","'isInstallPromptSupported' is assigned a value but never used.","'user' is assigned a value but never used.","'onClickInstall' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["309"],["310"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["311"],"'setColor' is assigned a value but never used.",["312"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["313"],"React Hook useEffect has missing dependencies: 'dispatch' and 'nationalCode'. Either include them or remove the dependency array.",["314"],["315"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'afterLogin' and 'history'. Either include them or remove the dependency array.",["316"],"'deviceId' is defined but never used.","'loading' is assigned a value but never used.","'verifyResult' is assigned a value but never used.","'physicalResult' is assigned a value but never used.","'resultActive' is assigned a value but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","'states' is assigned a value but never used.",["317"],["318"],"'submitDate' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["307"],["308"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'history' and 'resultVerify'. Either include them or remove the dependency array.",["319"],"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"324","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"324","fix":"335"},{"desc":"331","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [verifyResult, result, physicalResult, history]",{"range":"339","text":"340"},"Update the dependencies array to be: [history, phoneNumber]",{"range":"341","text":"342"},"Update the dependencies array to be: [dispatch, nationalCode]",{"range":"343","text":"344"},"Update the dependencies array to be: [history, user]",{"range":"345","text":"346"},"Update the dependencies array to be: [history, otp]",{"range":"347","text":"348"},{"range":"349","text":"344"},"Update the dependencies array to be: [history, nationalCode]",{"range":"350","text":"351"},"Update the dependencies array to be: [_data, afterLogin, history]",{"range":"352","text":"353"},{"range":"354","text":"344"},{"range":"355","text":"351"},"Update the dependencies array to be: [history, resultVerify]",{"range":"356","text":"357"},[1206,1244],"[verifyResult, result, physicalResult, history]",[1356,1369],"[history, phoneNumber]",[983,997],"[dispatch, nationalCode]",[788,794],"[history, user]",[1179,1184],"[history, otp]",[1311,1313],[1447,1461],"[history, nationalCode]",[1465,1472],"[_data, afterLogin, history]",[604,606],[719,733],[1436,1448],"[history, resultVerify]"]